plugins {
  id 'org.standardout.eclipseconfig' version '1.1.0' apply false
  id 'to.wetransform.semantic-release-version' version '2.1.0' apply false
}

def srcProjects() {
  subprojects.findAll { new File(it.projectDir, "src").exists() }
}

def javaProjects() {
  subprojects.findAll { new File(it.projectDir, "src/main/java").exists() }
}

def groovyProjects() {
  subprojects.findAll { new File(it.projectDir, "src/main/groovy").exists() }
}

allprojects {
  group = 'to.wetransform.logging'

  apply plugin: 'to.wetransform.semantic-release-version'
}

configure(srcProjects()) {
  // common settings
  apply plugin: 'org.standardout.eclipseconfig'
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'

  repositories {
    mavenCentral()
  }

  ext {
    logbackVersion = '1.5.5'
    slf4jVersion = '2.0.13'
    jacksonVersion = '2.17.0'
  }
}

configure(javaProjects()) {
  // package javadoc into a jar file
  task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
  }
}

configure(groovyProjects()) {
  // common settings for Groovy projects
  apply plugin: 'groovy'

  // package groovydoc into a jar file
  task packageJavadoc(type: Jar, dependsOn: 'groovydoc') {
    from groovydoc.destinationDir
    archiveClassifier = 'javadoc'
  }
}

configure(srcProjects()) { project ->
  // further common configuration (needs java/groovy config)

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(17)
    }
  }

  // package source into a jar file
  task packageSources(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java
        artifact packageSources
        artifact packageJavadoc
      }
    }

    repositories {
      maven {
        url = project.version.endsWith('-SNAPSHOT') ?
          'https://artifactory.wetransform.to/artifactory/private-snapshot-local' :
          'https://artifactory.wetransform.to/artifactory/private-release-local'
        credentials {
          username project.hasProperty('wetfArtifactoryUser') ? wetfArtifactoryUser : ''
          password project.hasProperty('wetfArtifactoryPassword') ? wetfArtifactoryPassword : ''
        }
      }
    }
  }

}

tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
  gradleVersion = '8.7'
}
